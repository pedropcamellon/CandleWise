name: CI - Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Backend tests
  test-backend:
    name: "Test Backend"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./backend

      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: ./backend

      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage"
        working-directory: ./backend

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./backend
          token: ${{ secrets.CODECOV_TOKEN }}

  # Frontend tests
  test-frontend:
    name: "Test Frontend"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run linting
        run: npm run lint
        working-directory: ./frontend

      - name: Build application
        run: npm run build
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_API_URL: http://localhost:5000

  # Infrastructure validation
  validate-terraform:
    name: "Validate Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform init -backend=false
        working-directory: ./infra

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./infra

      - name: Terraform Format Check
        run: terraform fmt -check
        working-directory: ./infra
